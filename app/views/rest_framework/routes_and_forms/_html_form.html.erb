<div style="max-width: 60em; margin: auto">
  <div class="mb-2">
    <label class="form-label w-100">Route
      <select class="form-control form-control-sm" id="htmlFormRoute">
        <% @_rrf_form_routes_html.each do |route| %>
          <% path = route[:path_with_params] %>
          <option value="<%= route[:verb] %>:<%= path %>"><%= route[:verb] %> <%= route[:relative_path] %></option>
        <% end %>
      </select>
    </label>
  </div>

  <%= form_with(**{
    model: @record,
    url: "",
    method: :patch,
    id: "htmlForm",
    scope: "",
    local: true,
  }.compact) do |form| %>
    <% controller.get_fields.map(&:to_s).each do |f| %>
      <%
        # Don't provide form fields for associations or primary keys.
        cfg = controller.class.field_configuration[f]
        next if !cfg || cfg[:kind] == "association" || cfg[:readonly]
      %>
      <div class="mb-2">
        <% if cfg[:kind] == "rich_text" %>
          <label class="form-label w-100"><%= controller.class.label_for(f) %></label>
          <%= form.rich_text_area f %>
        <% elsif cfg[:kind] == "attachment" %>
          <label class="form-label w-100"><%= controller.class.label_for(f) %>
            <%= form.file_field f, multiple: cfg[:attachment_type] == :has_many_attached %>
          </label>
        <% else %>
          <label class="form-label w-100"><%= controller.class.label_for(f) %>
            <%= form.text_field f, class: "form-control form-control-sm" %>
          </label>
        <% end %>
      </div>
    <% end %>

    <%= form.submit "Submit", name: "", class: "btn btn-primary", style: "float: right" %>
  <% end %>

  <script>
    // Update form anytime the route changes.
    document.getElementById("htmlFormRoute").addEventListener("change", (event) => {
      const [verb, path] = event.target.value.split(":")
      const form = document.getElementById("htmlForm")
      form.action = path
      form.querySelector("input[name='_method']").value = verb
    })

    document.addEventListener("DOMContentLoaded", (event) => {
      // Trigger the change event to update the form initially.
      document.getElementById("htmlFormRoute").dispatchEvent(new Event("change"))
    })
  </script>
</div>
